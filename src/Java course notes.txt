#3 First code in java

jshell was introduced in java 9 to run simple java code
When we write a code we need to compile the code javac <filename>


#4 How Java works

Hello.java --> complied using javac Hello.java --> byte code is Hello.class using java Hello --> run by JRE(JVM)

Java needs jre to run the byte code because it might need additional library. So the jdk>>jre>>jvm
Jdk contains jre and jvm. WORA write once run anywhere which means compile the code and run any device which has jvm installed


#5 Variables in java

In java declare the data type first then using the variable name

#6 Data Types in java (PrimitiveDataTypes.java)

In java we have two types of data types
1) Primitive data types
    a) Integer
        byte - 1 byte
        short - 2 bytes
        int - 4 bytes
        long - 8 bytes. For declaring long we need to declare l at the end. Eg: long ln = 1234566l;
    b) Float
        float - 4 bytes
        double - 8 bytes . In java if we dont declare point values it will by default takes double.
            If we want to have float we need to declare f at the end. Eg: float fl = 5.6f;
    c) Character
        char - 2 bytes java follows UNICODE
    d) Boolean
        boolean - true or false. In java we dont have 0 or 1. It is not valid in java.

#7 literal in java (PrimitiveDataTypes.java)
    literals are the literal values which we assign. Eg: int num = 7; Here 7 is the literal
    we can also work with base 2. Eg: int num = 0b101;
    we can work with hexadecimal numbers. Eg: int hexa = 0xE7;
    Long numbers can add underscore for easy reading. Eg: double value = 10_00_00_000;
    we can use epsilon in between. Eg double distance = 12e10;
    characters can be printed as number. Eg char letter = 'a'; c++;  we will get letter as b. As it is incremented.
#8 Type conversion in java (TypeConversion.java)
    we can store a large data type into small using casting. If we assign int a = 257; it will do 257%256 and store 1 in a.
    As 256 is the range for int.
    If byte a = 10; byte b = 30; int result = a*b; . Here the result value is more than the byte range so java will promote the
    value to int. This is called type promotions.

#9 Arithmetic operations in Java

    + addition, - subtraction, * multiplication, / gives quotient, % gives reminder
    int a = 5;
    int b = a++ // post increment, first assign the value then increment the value b
    int c = ++a // pre increment, first increment the value then assign to the value c
    int d += 2; , instead of int d = d + 2; we can use shorthand operator.

#10 Relational operators in java

    <, > , ==, <= , >= , != we can use this to compare primitive data types

#11 Logical operators in java

    ||, &&, ! we can use this with relational operators

#12 If else in java

    we can use conditional statements to allow the flow of code with certain conditions.
    if(true) then execute the if block, but if its false execute else.

#13 if else if in java

    if(true) then execute the if block, but if its false execute else if, if that also false do else

#14 Ternary operators in java

    we can reduce the if else to ternary operation // ?:
    first condition ? true execute this : false execute this

#15 Switch statement in java

    We can use switch to have condition checked by case is matching and execute the code.
    If we dont use the break. Once the case matched it will execute all the below cases.
    We can write a default case if no one case is matching.








