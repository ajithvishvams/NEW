#3 First code in java

jshell was introduced in java 9 to run simple java code
When we write a code we need to compile the code javac <filename>


#4 How Java works

Hello.java --> complied using javac Hello.java --> byte code is Hello.class using java Hello --> run by JRE(JVM)

Java needs jre to run the byte code because it might need additional library. So the jdk>>jre>>jvm
Jdk contains jre and jvm. WORA write once run anywhere which means compile the code and run any device which has jvm installed


#5 Variables in java

In java declare the data type first then using the variable name

#6 Data Types in java (PrimitiveDataTypes.java)

In java we have two types of data types
1) Primitive data types
    a) Integer
        byte - 1 byte
        short - 2 bytes
        int - 4 bytes
        long - 8 bytes. For declaring long we need to declare l at the end. Eg: long ln = 1234566l;
    b) Float
        float - 4 bytes
        double - 8 bytes . In java if we dont declare point values it will by default takes double.
            If we want to have float we need to declare f at the end. Eg: float fl = 5.6f;
    c) Character
        char - 2 bytes java follows UNICODE
    d) Boolean
        boolean - true or false. In java we dont have 0 or 1. It is not valid in java.

#7 literal in java (PrimitiveDataTypes.java)
    literals are the literal values which we assign. Eg: int num = 7; Here 7 is the literal
    we can also work with base 2. Eg: int num = 0b101;
    we can work with hexadecimal numbers. Eg: int hexa = 0xE7;
    Long numbers can add underscore for easy reading. Eg: double value = 10_00_00_000;
    we can use epsilon in between. Eg double distance = 12e10;
    characters can be printed as number. Eg char letter = 'a'; c++;  we will get letter as b. As it is incremented.
#8 Type conversion in java (TypeConversion.java)
    we can store a large data type into small using casting. If we assign int a = 257; it will do 257%256 and store 1 in a.
    As 256 is the range for int.
    If byte a = 10; byte b = 30; int result = a*b; . Here the result value is more than the byte range so java will promote the
    value to int. This is called type promotions.

#9 Arithmetic operations in Java

    + addition, - subtraction, * multiplication, / gives quotient, % gives reminder
    int a = 5;
    int b = a++ // post increment, first assign the value then increment the value b
    int c = ++a // pre increment, first increment the value then assign to the value c
    int d += 2; , instead of int d = d + 2; we can use shorthand operator.

#10 Relational operators in java

    <, > , ==, <= , >= , != we can use this to compare primitive data types

#11 Logical operators in java

    ||, &&, ! we can use this with relational operators

#12 If else in java

    we can use conditional statements to allow the flow of code with certain conditions.
    if(true) then execute the if block, but if its false execute else.

#13 if else if in java

    if(true) then execute the if block, but if its false execute else if, if that also false do else

#14 Ternary operators in java

    we can reduce the if else to ternary operation // ?:
    first condition ? true execute this : false execute this

#15 Switch statement in java (SwitchStatement.java)

    We can use switch to have condition checked by case is matching and execute the code.
    If we dont use the break. Once the case matched it will execute all the below cases.
    We can write a default case if no one case is matching.

Switch update:
    To use new switch we must need java 12 and above
    now we can use -> instead of using : {code}; break;
    if we want to use : we need to yield

        String s = "Monday";
        switch (s){
            case "Monday", "Wednesday" -> System.out.println("Meeting @ 12.00 PM");
            case "Tuesday", "Thursday" -> System.out.println("Meeting @ 02.00 PM");
            default-> System.out.println("Value is above 7");
        }
        String result = "";
        result = switch (s){
            case "Monday", "Wednesday" -> "12.00 PM";
            case "Tuesday", "Thursday" -> "02.00 PM");
            default-> "Value is above 7";
        };
        String yieldresult = "";
        yieldresult = switch (s){
            case "Monday", "Wednesday": yield "12.00 PM";
            case "Tuesday", "Thursday": yield  "02.00 PM");
            default : yield "Value is above 7";
        };
        System.out.println(result);
        System.out.println(yieldresult);

#16 Need for loop in java
    To run a task repeatedly based on some conditions.
    We have for, while, do while loops.

#17 While loop in java (DoWhileLoop.java)
    To run a task repeatedly based on some conditions.

#18 Do while loop in java (DoWhileLoop.java)
    If we want to run a loop once and if the litrator is true then
    run the loop.
    Eg: user a wants to send a message to user b is he is not
    available stop the condition.

#19 For loop in java (ForLoop.java)
    For loop run first 2 step .
    Eg: for(int i = 0; i <=4 ; i++)
    Here first it will execute i is 0 and i <= 4 then,
    runs the {} block then i++ is done.
    As while will only check if It's true or not

#20 Which loop to use in java
    Mostly for loop, if file system or database while
    and when we want to run even though condition is false once

#21 Class and Object theory in java
    Lets assume we need a table
    We ask carpenter to make it, but he need technical details such as height
    User can tell he need a computer table to a middle man
    That middle man can tell technical details to the carpenter
    Similarly in programming middle man is the class
    carpenter is the JVM which will create object (table)
    Using class (blueprint).

#22 Class and Object practical in java
    A class is used to create an object which knows some thing
    and can do something.
    class Calculator{
     int a;
    public int add(int n1, int n2){
      int x = n1+n2;
      System.out.println("in add method");

      return x;
    }
    }
    Calculator cal = new Calculator();
    int result = cal.add(5,9);
    Here Calculator class knows properties such as int a
    and it can do some things like add method.














